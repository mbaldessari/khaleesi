---
- name: build or import images
  hosts: undercloud
  tasks:
    - name: setup environment vars
      template: src={{ base_dir }}/khaleesi/playbooks/installer/rdo-manager/templates/build-img-env.j2 dest=~/build-img-env mode=0755

    - name: ensure /tmp/svc-map-services is absent
      file: path=/tmp/svc-map-services state=absent
      sudo: yes
      when: installer.overcloud_images | default('build') == "build"

    - name: Contents of build-img-env
      shell: >
          cat {{ instack_user_home }}/build-img-env

    - name: build all the images
      shell: >
          source {{ instack_user_home }}/build-img-env;
          openstack overcloud image build --all > {{ instack_user_home }}/openstack-build-images.log
      when: installer.overcloud_images | default('build') == "build"

    - name: ensure wget is installed
      yum: name=wget state=latest
      sudo: yes

    - name: hack openstack pupped mysql module part 1
      get_url: url=https://raw.githubusercontent.com/puppetlabs/puppetlabs-mysql/1cfddec3ff2baa12e5eb87606712f33a2b2b0473/manifests/server/service.pp dest={{ instack_user_home }}/service.pp

    - name: install guestfish
      yum: name=guestfish state=present
      sudo: yes

    - name: hack openstack pupped mysql module part 2
      shell: virt-copy-in -a {{ instack_user_home }}/overcloud-full.qcow2 {{ instack_user_home }}/service.pp /usr/share/openstack-puppet/modules/mysql/manifests/server/

    - name: download the pre-built rdo-manager images
      shell: >
            wget --quiet -c -O {{ instack_user_home }}/{{ item }}.tar
            "{{ installer.images.url[product.name][product.full_version][product.build][installer.images.version] }}{{ item }}.tar"
      with_items: "{{ installer.images[product.full_version].files|list }}"
      when: installer.overcloud_images is defined and installer.overcloud_images == "import"

- name: prep and upload images into glance
  hosts: undercloud
  tasks:
    - name: untar the overcloud images
      shell: tar -xvf "{{ instack_user_home }}/{{ item }}.tar"
      with_items: "{{ installer.images[product.full_version].files|list }}"
      when: installer.overcloud_images is defined and installer.overcloud_images == "import"

    - name: download the fedora-user image
      get_url: url="{{ distro.images['fedora']['21'].remote_file_server }}{{ distro.images['fedora']['21'].guest_image_name }}"
                    dest={{ instack_user_home }}/fedora-user.qcow2
                    force=no
                    timeout=60

    - name: prepare for overcloud by loading the images into glance
      shell: >
          source {{ instack_user_home }}/stackrc;
          openstack overcloud image upload
